// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  login42       String?

  name          String?   @unique @default("")
  email         String?   @unique @default("")
  image         String?   @default("https://res.cloudinary.com/transcendence42/image/upload/v1692378890/ft_transcendence/ft_transcendence_avator_utith7.png")

  status        String?   @default("offline")
  games         Int?      @default(0)
  wins          Int?      @default(0)
  winRate       Float?
  achievements  String[]
  score         Int?      @default(0)
  rank          Int?      @default(0)

  accessToken   String    @default("noToken")
  isRegistered  Boolean   @default(false)

  //social network
  //friend list
  friends       User[]    @relation("friends") // fait référence aux autres utilisateurs que l'utilisateur a ajoutés en tant qu'amis
  friendOf      User[]    @relation("friends") // fait référence aux autres utilisateurs qui ont ajouté l'utilisateur en tant qu'ami.
  //blocked list
  blocked       User[]    @relation("blocked")
  blockedOf     User[]    @relation("blocked")

  //friend request
  pending       User[]   @relation("pending")
  pendingOf     User[]   @relation("pending")
  
  otp_enabled  Boolean   @default(false) //for one time pass
  otp_verified  Boolean   @default(false) // for one time pass
  otp_validated Boolean   @default(false) // for one time pass
  otp_code      String?   @default("")

  gamesLost     Int       @default(0)
  gamesWon      Int       @default(0)
  gamesPlayed   Int       @default(0)
  gameHistory   Int[]

  owner         Channel[] @relation("owner")
  admin         Channel[] @relation("admin")
  member        Channel[] @relation("member")
  invited       Channel[] @relation("invited")
  chanBanned    Channel[] @relation("banned")

  muted         Mute[]
  messages      Message[]
}

model Game {
  id            Int       @id @unique

  player1       Int
  ScorePlayer1  Int
  player2       Int
  ScorePlayer2  Int

  startTime    DateTime @default(now())
  endTime      DateTime
  duration     Int?

}

model Channel {
  id            Int       @id @default(autoincrement())
  name          String    @unique @default(uuid())
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  dm            Boolean   @default(false)
  private       Boolean   @default(false)
  isProtected   Boolean   @default(false)
  password      String?

  owners         User[]   @relation("owner")
  admins         User[]   @relation("admin")
  members        User[]   @relation("member")
  invited       User[]    @relation("invited")
  banned        User[]    @relation("banned")

  muted         Mute[]
  messages      Message[]

  @@unique([id])
}

model Mute {
  id            Int       @id @default(autoincrement())
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  userId        Int
  muted         User      @relation(fields: [userId], references: [id])
  channel       Channel   @relation(fields: [channelId], references: [id])
  channelId     Int
}

model Message {
  id            Int       @id @default(autoincrement())
  owner         User      @relation(fields: [userId], references: [id])
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  content       String
  userId        Int
  channel       Channel   @relation(fields: [channelId], references: [id])
  channelId     Int
  history       String[]
  unsent        Boolean   @default(false)
}
