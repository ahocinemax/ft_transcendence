version: '3.8'
services:


  postgres:
    container_name: postgres
    image: postgres:14.2-alpine
    ports:
      - 5432:5432
    volumes:
       - db_data:/var/lib/postgresql/data     
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=en_US.utf8"
      POSTGRES_DB: ${POSTGRES_DB}
    restart: always
    networks:
      - ft_transcendence

  backend:
    build:
      context: ./backend 
    ports:
     - ${SERVER_PORT}:${SERVER_PORT}
    volumes:
     - ./backend:/usr/src/app
     - /usr/src/app/node_modules
    networks:
     - ft_transcendence
    depends_on:
      - postgres

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    ports:
      - 5050:80
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_MAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - ft_transcendence
#for connect pgadmin: http:://localhost:5050

  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    ports:
      - 1024:1024
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - ft_transcendence

  front:
    image: node:lts-alpine
    container_name: front
    working_dir: /app
    restart: unless-stopped
    volumes:
      - ./front:/app
    command: sh -c "yarn install
              && yarn run build
              && yarn global add serve
              && serve -s build"
    environment:
      - PUBLIC_URL=${FRONT_URL}
      - REACT_APP_BACK_URL=${BACK_URL}
      - REACT_APP_BACK_PORT=${SERVER_PORT}
    ports:
      - 3000:3000
    depends_on:
      - backend
    networks:
      - ft_transcendence

networks:
  ft_transcendence:
    driver: bridge

volumes:
  db_data: {}
  pgadmin_data: {}