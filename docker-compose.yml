version: '3.7'
services:
  back:
    image: node:lts-alpine
    container_name: back
    working_dir: /app
    restart: unless-stopped
    volumes:
      - ./back:/app
      - uploads:/app/img_dir
    command: sh -c "yarn install
              && npx prisma migrate deploy
              && yarn run start"
    ports:
      - 4000:4000
      - 5555:5555
    depends_on:
      - db
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - SITE_URL=${SITE_URL}
      - FRONT_URL=${FRONT_URL}
      - BACK_URL=${BACK_URL}
      - FRONT_PORT=${FRONT_PORT}
      - BACK_PORT=${BACK_PORT}
    networks:
      - transcendence
  
  front:
    image: node:lts-alpine
    container_name: front
    working_dir: /app
    restart: unless-stopped
    volumes:
      - ./front:/app
    command: sh -c "yarn install
              && yarn run build
              && yarn global add serve
              && serve -s build"
    environment:
      - PUBLIC_URL=${FRONT_URL}
      - REACT_APP_BACK_URL=${BACK_URL}
      - REACT_APP_BACK_SOCKET=${BACK_SOCKET}
    ports:
      - 3000:3000
    depends_on:
      - back
    networks:
      - transcendence
  
  db:
    image: postgres:14-alpine
    container_name: postgresDB
    restart: unless-stopped
    environment:
      POSTGRES_USER: <your_user>
      POSTGRES_PASSWORD: <your_password>
      POSTGRES_DB: <your_database_name>
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - transcendence
  
  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    ports:
      - 1024:1024
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - back
    restart: unless-stopped
    networks:
      - transcendence

networks:
  transcendence:
    driver: bridge
  
volumes:
  db_data:
  uploads:
